# This is a basic workflow to help you get started with Actions

name: Test, CI & Create Artifact

on:
  push:
    branches: [ "dev", "main" ]
  pull_request:
    branches: [ "dev", "main" ]

env: 
  VERSION: latest
  IMAGE: spark_play


jobs:
  test-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"] # ["3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download and install poetry
      run: make download-poetry

    - name: Set Poetry Path
      run: |
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        make install

    - name: Check and format style
      run: |
        make check-style

    - name: Analysing the code with pylint
      run: |
        make lint

    - name: Testing python with pytest
      run: |
        make testing

    - name: Build the poetry python image
      run: poetry build
    
    - name: Prepare pex
      run: |
        pip install pex
        poetry env use python3.8
        poetry run pip freeze > requirements.txt
        pex -v -r requirements.txt -o dist/${IMAGE}.pex --disable-cache
        # pex -v -r requirements.txt -e flows/pipeline-1.py -o dist/${IMAGE}.pex --disable-cache

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: ./dist
